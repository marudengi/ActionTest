name: Push Docker image to ECR

on:
  release:
    types: [published]
  push:
    branches: [ "main" ]
    

jobs:
  push_to_registry:  
    name: Push Docker image to ECR
    runs-on: ubuntu-18.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
#       - name: Generate Docker metadata
#         id: meta
#         uses: docker/metadata-action@v3
#         with:
#           images: docker.io/${{ github.repository }}
#           tags: |
#             type=ref,event=branch
#             type=semver,pattern={{version}}
#             type=semver,pattern={{major}}.{{minor}}
#           flavor: |
#             latest=true
      
      - name: GitHub Tag (with tags filter)
      # You may pin to the exact commit or the version.
      # uses: IIlyichev/github-tag-action@8b40ce208f6d7f902a3ee8c761f76db20fd87475
        uses: IIlyichev/github-tag-action@v6.3
        with:
          # Required for permission to tag the repo.
          github_token: ${{ GIT_ACCESS_TOKEN }}
          # Which type of bump to use when none explicitly provided when commiting to a release branch (default: `patch`).
#           default_bump: # optional, default is patch
          # Which type of bump to use when none explicitly provided when commiting to a prerelease branch (default: `prerelease`).
#           default_prerelease_bump: # optional, default is prerelease
          # A prefix to the tag name (default: `v`).
#           tag_prefix: # optional, default is v
          # Tags filter string.
#           tag_filter: # optional
          # A suffix to a pre-release tag name (default: `<branch>`).
#           append_to_pre_release_tag: # optional
          # Custom tag name. If specified, it overrides bump settings.
#           custom_tag: # optional
          # Comma separated list of release rules. Format: `<keyword>:<release_type>`. Example: `hotfix:patch,pre-feat:preminor`.
#           custom_release_rules: # optional
          # Comma separated list of branches (bash reg exp accepted) that will generate the release tags. Other branches and pull-requests generate versions postfixed with the commit hash and do not generate any tag. Examples: `master` or `.*` or `release.*,hotfix.*,master`...
#           release_branches: # optional, default is master,main
          # Comma separated list of branches (bash reg exp accepted) that will generate pre-release tags.
#           pre_release_branches: # optional
          # The commit SHA value to add the tag. If specified, it uses this value instead GITHUB_SHA. It could be useful when a previous step merged a branch into github.ref.
          commit_sha: true # optional
          # Boolean to create an annotated tag rather than lightweight.
#           create_annotated_tag: # optional, default is false
          # Boolean to fetch all tags for a repo (if false, only the last 100 will be fetched).
#           fetch_all_tags: # optional, default is false
          # Do not perform tagging, just calculate next version and changelog, then exit.
#           dry_run: # optional, default is false
      
      
      - name: Docker ECR
        # You may pin to the exact commit or the version.
        # uses: appleboy/docker-ecr-action@174bc7ab545bf5c4f4492240c4d839a987643559
        uses: appleboy/docker-ecr-action@v0.0.3
        with:
          # amazon access key
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }} # optional
          # amazon secret access key
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # optional
          # docker registry
          registry: ${{ secrets.REGISTY }} # optional
          # amazon region, defaults to us-east-1
          region: us-east-2 # optional, default is us-east-1
          # repository name for the image
          repo: sample # optional
          # filename of ecr lifecycle json policy
          #lifecycle_policy: # optional
          # filename of ecr repository json policy
          #repository_policy: # optional
          # repository tag for the image, defaults to latest
          tags: dev-${{github.sha}} # optional, default is latest
          # dockerfile to be used, defaults to Dockerfile
          dockerfile: Backend/Dockerfile # optional, default is Dockerfile
          # auth token for the registry
          #auth: # optional
          # the context path to use, defaults to root of the git repo
          context: Backend # optional, default is .
          # replace existing matched image tags
#           force_tag: true # optional
          # enable insecure communication to this registry
          #insecure: # optional
          # use a mirror registry instead of pulling images directly from the central Hub
          #mirror: # optional
          # use for pass bridge ip
          #bip: # optional
          # set custom dns servers for the container
          #custom_dns: # optional
          # supports aufs, overlay or vfs drivers
          #storage_driver: # optional
          # images to consider as cache sources
          #cache_from: # optional
          # default build tags
#           auto_tag: true # optional
          # do not start the docker daemon
          #daemon_off: # optional
#           cache_from: ${{ secrets.REGISTY }}/sample
